<style>
table{width:100%}
textarea{width:100%}
.div1{float:left;width:40%}
.div2{float:right;width:60%}
</style>
<section class="content" id="dashboard">
  <header>
    <h3>Modelo prueba</h3>
  </header>

<div class="test_containers div1"> 
<form accept-charset="UTF-8" action="/models/test_output" id="test_process" method="post">
  <div style="margin:0;padding:0;display:inline">
    <input name="utf8" type="hidden" value="âœ“">
    <input name="authenticity_token" type="hidden" value="cER7Ym8h0ZG2ootuPcAqJIb3sH8AKceLbRvszDk/Dq4=">
  </div>
  <table>
    <thead>
      <tr>
        <th>Lingo Script</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>
          <textarea id="model_script" name="model[script]" rows="20">
!Este es un problema de ejemplo
 Una empresa produce 2 tipos de computadores
   Standard (Precio: $100) 
   Turbo    (Precio: $150)
 Se puede producir:
   Standard : 100 por dia
   Turbo    : 120 por dia
 Hay un total de 160 horas disponibles de 
 trabajo por dia y se emplean
   Standard : 1 hora de trabajo
   Turbo    : 2 horas de trabajo
 Se pide obtener la combinacion de computadores 
 de manera que se maximice el beneficio de la empresa;

MODEL:
  MAX = 100 * STANDARD + 150 * TURBO;
  STANDARD < 100;
  TURBO < 120;
  STANDARD + 2 * TURBO < 160;
END
          </textarea>
        </td>
      </tr> 
    </tbody>
  </table>
    <div class="form-actions">
      <input name="commit" type="submit" value="Resolver">
    </div>
    </div>
</form>
</div>
<div class="test_containers div2"> 
  <table>
    <thead>
      <tr>
        <th>Lingo Result</th>
      </tr>
    </thead>
  </table>
</section>

<script>
$('#test_process').submit(function(event) {

	// get the form data
	// there are many ways to get this data using jQuery (you can use the class or id also)
	var formData = {
		'model[script]' 	: $('#model_script').val()
	};

	// process the form
	$.ajax({
	  type 	: 'POST', // define the type of HTTP verb we want to use (POST for our form)
	  url 	: 'test_output', // the url where we want to POST
	  data 	: formData, // our data object
          encode  : true
	})
	// using the done promise callback
	.done(function(data) {

	// log data to the console so we can see
	  console.log(data); 
  $(".div2").html(data);
	// here we will handle errors and validation messages
	});

	// stop the form from submitting the normal way and refreshing the page
	event.preventDefault();
});
</script>
